# Generated by Django 5.1.12 on 2025-10-21 18:13

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TradingAlgorithm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('buy_threshold', models.FloatField(default=-0.05, help_text='Percentage drop to trigger buy (negative value, e.g., -0.05 for 5% drop)', validators=[django.core.validators.MaxValueValidator(0)])),
                ('sell_threshold', models.FloatField(default=0.1, help_text='Percentage rise to trigger sell (positive value, e.g., 0.10 for 10% rise)', validators=[django.core.validators.MinValueValidator(0)])),
                ('buy_amount', models.FloatField(default=5.0, help_text='Dollar amount to buy when triggered', validators=[django.core.validators.MinValueValidator(0.01)])),
                ('sell_amount', models.FloatField(default=10.0, help_text='Dollar amount to sell when triggered', validators=[django.core.validators.MinValueValidator(0.01)])),
                ('min_volatility', models.FloatField(default=0.01, help_text='Minimum acceptable volatility', validators=[django.core.validators.MinValueValidator(0)])),
                ('max_volatility', models.FloatField(default=0.5, help_text='Maximum acceptable volatility', validators=[django.core.validators.MinValueValidator(0)])),
                ('min_data_points', models.IntegerField(default=30, help_text='Minimum data points required', validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BacktestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbols', models.TextField(help_text='Comma-separated stock symbols')),
                ('weeks', models.IntegerField(default=52)),
                ('initial_cash', models.FloatField(default=10000.0)),
                ('final_value', models.FloatField(blank=True, null=True)),
                ('total_return_pct', models.FloatField(blank=True, null=True)),
                ('max_drawdown_pct', models.FloatField(blank=True, null=True)),
                ('total_trades', models.IntegerField(blank=True, null=True)),
                ('buy_trades', models.IntegerField(blank=True, null=True)),
                ('sell_trades', models.IntegerField(blank=True, null=True)),
                ('trade_log', models.TextField(blank=True, help_text='JSON-encoded trade log')),
                ('portfolio_history', models.TextField(blank=True, help_text='JSON-encoded portfolio history')),
                ('final_holdings', models.TextField(blank=True, help_text='JSON-encoded final holdings')),
                ('chart_path', models.CharField(blank=True, help_text='Path to result chart', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('algorithm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backtests', to='algorithms.tradingalgorithm')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
